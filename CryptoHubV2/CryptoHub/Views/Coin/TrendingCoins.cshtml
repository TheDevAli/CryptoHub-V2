@model CoinGecko.Entities.Response.Search.TrendingList;

@{
    ViewData["Title"] = "Trending Coins";
}

<div class="jumbotron text-center">
    <h1 class="display-4">Trending Coins</h1>
    <p class="lead">Top 3 cryptocurrencies searched by users on CoinGecko in the last 24 hours.</p>
    <hr />
</div>

<div class="d-flex gap-3 justify-content-center">
    @for (int i = 0; i < 3; i++)
    {
        <div class="card card-custom bg-white border-white border-0" style="width: 25%">
            @if (i == 0)
            {
                <div class="card-custom-img" style="background-color: gold;"></div>
            }
            else if (i == 1)
            {
                <div class="card-custom-img" style="background-color: silver;"></div>
            }
            else
            {
                <div class="card-custom-img" style="background-color: saddlebrown;"></div>
            }
            <div class="card-custom-avatar">
                <img class="img-fluid" src="@Model.TrendingItems[i].TrendingItem.Large" alt="Avatar" />
            </div>
            <div class="card-body" style="overflow-y: auto">
                <h4 class="card-title">@Html.DisplayName(Model.TrendingItems[i].TrendingItem.Name) (@Html.DisplayName(Model.TrendingItems[i].TrendingItem.Symbol))</h4>
                <hr>
                <p class="card-text">Market Rank: @Html.DisplayName(Model.TrendingItems[i].TrendingItem.MarketCapRank.ToString())</p>
                <p class="card-text">BTC Value: @Html.DisplayName(Model.TrendingItems[i].TrendingItem.PriceBtc.ToString())</p>
            </div>
            <!--<div class="card-footer" style="background: inherit; border-color: inherit;">
                <a href="#" class="btn btn-primary">Option</a>
            </div> -->
        </div>
    }
</div>